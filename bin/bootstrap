#!/usr/bin/env node

const yargs = require('yargs');
const fs = require('fs');

const PKG = require('../package.json');
const support = require('../index');
const featureNames = support.featureNames();

// Configure
let argsParser = yargs
  .alias('v', 'version')
  .version(PKG.version)
  .describe('v', 'show version information')

  .alias('h', 'help')

  .option('f', {
    alias: 'feature',
    description: 'a feature name to include (multiple allowed)',
    array: true,
    type: 'string',
    choices: featureNames
  })

  .option('c', {
    alias: 'config-file',
    description: 'path to a json file containing the config options you want to use',
    type: 'string',
    coerce: (arg) => arg ? JSON.parse(fs.readFileSync(arg, 'utf8')) : {}
  })

  .demandOption('f', 'You must invoke this script with at least one feature');

// Parse args for initializing support
let argv = argsParser.argv;

// Fire up the support object
support.init(argv.f, argv.c);

// TODO: This sucks -- need to have a way of initializing support ahead of time so that yargs has the right options for bootstrapping

// Add in the rest of the options
argsParser = support.bootstrapOptions(argsParser);
argv = argsParser.argv;

// Bootstrap
support.bootstrap(argv)
  .then(_ => {
    console.log('Done');
  })
  .catch(err => {
    console.log(err);
  })
  .finally(_ => support.destroy());

